<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mnuTree.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>203, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>303, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAo
        CgAAAk1TRnQBSQFMAgEBAwEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIALP8B+AHuAeNR/xAAAwMBBAE5ATIBKgFHAwwBD2QAKP8B+AHuAeMB/wGZ
        ATMBAAH/AfgB7gHjTf8MAAMDAQQBZwFOATUBhQGQAVwBKAG/AYYBWgEtAbEBRgE7ATABWQMFAQZcACT/
        AfgB7gHjAf8BtQFjATUB/wHYAZsBWwH/AZkBMwEAAf8B+AHuAeNJ/wgAAwMBBAFnAU4BNQGFAWoBTwE0
        AYgBkAFcASgBvwEkASEBHgEsAWkBTgE0AYgBgQFXAS8BqQE2ATABKQFDBAFUABz/AZcBgAFvAf8BlwGA
        AW8B/wHYAZsBWwL/Ac0BmQH/AekBtAF8Af8B2AGbAVsB/wGZATMBAAH/AfgB7gHjEf8DMQH/AzEB/wMx
        Df8DMQH/AzEB/wMxEf8EAAMDAQQBZwFOATUBhAFtAVABNAGMARMBEgERARcBkAFcASgBvwEQAg8BEwEQ
        Ag8BEwEuASkBJQE5AXMBUwEzAZcBdgFTATIBmQEmASMBIAEvUAAc/wGXAYABbwX/AfgB7gHjAf8B2AGb
        AVsC/wHNAZkB/wHpAbQBfAH/AdgBmwFbAf8BmQEzAQAB/wH4Ae4B4w3/AzEd/wMxEf8EAAFkAUwBNQGC
        AWoBTwE0AYgBEgIRARYBEAIPARMBkAFcASgBvwEQAg8BEwEQAg8BEwEQAg8BEwEQAg8BEwE/ATYBLQFP
        AYEBVwEvAakBZwFOATUBhAEXARYBFQEcSAAc/wGXAYABbwn/AfgB7gHjAf8B2AGbAVsC/wHNAZkB/wHJ
        AXMBQwH/AfgB7gHjEf8DMR3/AzER/wQAAZABXAEoAb8BEgIRARYBEAIPARMBPgE1AS0BTgGuAV0BDwHs
        AW0BUQE0AY4BGQEYARYBHwEQAg8BEwEQAg8BEwEQAg8BEwEUARMBEgEYAU0BQAEyAWIBhQFYAS0BsAFR
        AUIBMwFnRAAM/wHYAe4B9g3/AZcBgAFvDf8B9wHeAeIB/wHYAZsBWwH/AfgB7gHjFf8DMR3/AzER/wQA
        AZABXAEoAb8BEAIPARMBPgE1AS0BTgGuAV0BDwHsAVoBRwE0AXMBhAFYAS0BrwGsAV4BEAHpAVkBRwE0
        AXIBEwESAREBFwEQAg8BEwEQAg8BEwEQAg8BEwEaARkBFwEgAZABXAEoAb9EAAj/AdgB7gH2Af8BDgF4
        AZ4B/wHYAe4B9gn/AZcBgAFvCf8B/QHsAf0B/wGNAS0BjAH/AfcB3gHiGf8DMR3/AzER/wQAAZABXAEo
        Ab8BPAE0ASwBSwGtAV0BDwHsAUwBPwEyAWEBIgEfAR0BKgEiAR8BHQEqAT0BNQEsAU0BkAFbAScBwAGj
        AV4BGQHcAU0BQAEyAWIBEAIPARMBEAIPARMBEAIPARMBkAFcASgBv0QABP8B2AHuAfYB/wEOAXgBngH/
        ARwBtgHuAf8BDgF4AZ4B/wHYAe4B9gX/AZcBgAFvBf8B/QHsAf0B/wGzATwBsgH/AdwBcAHbAf8BjQEt
        AYwB/wH9AewB/RX/AzEd/wMxEf8EAAGZAV8BIQHOAa0BXQEPAewBTAE/ATIBYQEiAR8BHQEqASIBHwEd
        ASoBIgEfAR0BKgEiAR8BHQEqASIBHwEdASoBTgFAATIBYwGgAV4BHAHXAZIBXAEmAcMBMwEuASgBQAEQ
        Ag8BEwGQAVwBKAG/RAAB2AHuAfYB/wEOAXgBngH/AU8BywHxAf8BNAHAAe8B/wEvAb4B7wH/AQwBYgGB
        Af8BlwGAAW8B/wGXAYABbwH/AZcBgAFvAf8B2QFsAdgB/wH6Aa0B+gH/AfsBmAH6Af8B3AFwAdsB/wGN
        AS0BjAH/Af0B7AH9Ef8DMR3/AzER/wQAAa4BXgEMAe8BnwFeAR0B1QEwASsBJgE8ASIBHwEdASoBIgEf
        AR0BKgEiAR8BHQEqASIBHwEdASoBIgEfAR0BKgEiAR8BHQEqASUBIgEfAS0BYwFMATUBgAGsAV4BEAHp
        AYABWAEvAagBlAFcASQBxkQAARQBqgHhAf8BhQHhAfUB/wFrAdcB9AH/AVABywHxAf8BNAHAAfAB/wEd
        AbUB7gH/AQwBYgGBAf8B2AHuAfYF/wH9AewB/QH/AdMBZQHSAf8B+gGtAfoB/wH7AZgB+gH/AdwBcAHb
        Af8BjQEtAYwB/wH9AewB/Q3/AzEd/wMxEf8EAAEmASMBIAEvAZkBXQEhAc4BtQFdAQcB9wF+AVcBMAGl
        AScBIwEgATABIgEfAR0BKgEiAR8BHQEqASIBHwEdASoBIgEfAR0BKgEiAR8BHQEqASIBHwEdAioBJwEj
        ATUBlAFcASQBxwGvAV0BCwHwRAAB2AHuAfYB/wEUAaoB4QH/AYYB4QH1Af8BbAHWAfMB/wFQAcsB8gH/
        ATUBwAHwAf8BHAG1Ae0B/wEMAWIBgQH/AdgB7gH2Bf8B/QHsAf0B/wHTAWUB0gH/AfoBrQH6Af8B0wFl
        AdIB/wH9AewB/RH/AzEd/wMxEf8MAAE4ATEBKgFGAaMBXgEYAd0BsgFdAQoB8gFyAVMBNAGUASIBHwEd
        ASoBIgEfAR0BKgEiAR8BHQEqASIBHwEdASoBIgEfAR0BKgFeAUkBNQF4AbYBXQEGAfgBUQFCATMBZkQA
        BP8B2AHuAfYB/wEUAaoB4QH/AYUB4AH1Af8BbAHWAfMB/wFQAcsB8gH/ATQBwAHvAf8BHQG1Ae0B/wEM
        AWIBgQH/AdgB7gH2Bf8B/QHsAf0B/wHTAWUB0gH/Af0B7AH9Ff8DMR3/AzER/xQAAVMBQwEzAWkBrwFd
        AQ0B7gGpAV4BFAHlAVQBRAEzAWsBIgEfAR0BKgEiAR8BHQEqAV4BSQE1AXgBtgFdAQYB+AFRAUIBMwFm
        SAAI/wHYAe4B9gH/ARQBqgHhAf8BhgHhAfQB/wFrAdYB9AH/AVABywHxAf8BFwGYAcgB/wHYAe4B9g3/
        Af0B7AH9Gf8DMQH/AzEB/wMxDf8DMQH/AzEB/wMxEf8YAAMGAQcBdAFUATMBlgG1AV0BBwH3AZ4BXQEe
        AdQBcwFTATMBlQG3AV0BBQH5AU8BQAEyAWRMAAz/AdgB7gH2Af8BFAGqAeEB/wGFAeEB9QH/ARcBmAHI
        Af8B2AHuAfZh/yAAARICEQEWAYgBWgEsArQBXgEJAfQBTwFAATIBZFAAEP8B2AHuAfYB/wEUAaoB4QH/
        AdgB7gH2Zf+AAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/BQAB8QH/BgAB4AF/
        BgABwAEfBgABgAEPBgABgAEDBgABgAEBBgABgAEBBgABgAEBBgABgAEBBgABgAEBBgABgAEBBgAB4AEB
        BgAB+AEDBgAB/AEHBgAB/wEPBgAC/wIACw==
</value>
  </data>
</root>